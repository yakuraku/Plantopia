name: Deploy to GCP

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Deploy to GCP VM
      uses: appleboy/ssh-action@v0.1.5
      with:
        host: ${{ secrets.GCP_VM_IP }}
        username: ${{ secrets.GCP_VM_USER }}
        key: ${{ secrets.GCP_SSH_KEY }}
        command_timeout: 10m
        script: |
          set -e  # Exit immediately if any command fails

          echo "Starting deployment to GCP..."

          # Check if project directory exists
          if [ ! -d "/opt/plantopia/Plantopia" ]; then
            echo "Project directory /opt/plantopia/Plantopia not found"
            exit 1
          fi

          cd /opt/plantopia/Plantopia
          echo "Current directory: $(pwd)"

          # Fix potential Git reference issues
          echo "Fetching latest code..."
          git fetch --prune origin
          git reset --hard origin/main

          echo "Activating Python environment..."
          source venv/bin/activate

          echo "Installing dependencies..."
          pip install -r requirements.txt

          echo "Restarting application..."
          sudo supervisorctl restart plantopia

          # Wait for service to start
          echo "Waiting for service to start..."
          sleep 15  # Increased wait time

          # Check service status
          echo "Checking service health..."
          if sudo supervisorctl status plantopia | grep -q RUNNING; then
            echo "Process is running, checking API response..."

            # Try health check with retries
            MAX_RETRIES=3
            RETRY_COUNT=0
            while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
              HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" --connect-timeout 5 http://localhost:8000/docs 2>&1 || echo "000")
              echo "Health check attempt $((RETRY_COUNT + 1)): HTTP status = $HTTP_STATUS"

              if [ "$HTTP_STATUS" = "200" ]; then
                echo "API is responding successfully!"
                break
              elif [ "$HTTP_STATUS" = "000" ]; then
                echo "Connection failed, waiting 5 seconds before retry..."
                sleep 5
              else
                echo "Unexpected HTTP status: $HTTP_STATUS"
              fi

              RETRY_COUNT=$((RETRY_COUNT + 1))
            done

            if [ "$HTTP_STATUS" != "200" ]; then
              echo "API health check failed after $MAX_RETRIES attempts"
              echo "Application logs (last 100 lines):"
              sudo supervisorctl tail -100 plantopia
              exit 1
            fi
          else
            echo "Application failed to start"
            echo "Application logs (last 100 lines):"
            sudo supervisorctl tail -100 plantopia
            exit 1
          fi

          # Deployment summary
          echo ""
          echo "âœ… Deployment completed successfully!"
          echo "Deployment Information:"
          echo "  - Server: ${{ secrets.GCP_VM_IP }}"
          echo "  - Project: /opt/plantopia/Plantopia"
          echo "  - Time: $(date)"
          echo "  - Commit: $(git rev-parse --short HEAD)"
          echo "  - Branch: $(git branch --show-current)"